
#list of analysis levels in the bids app
analysis_levels:
 - participant

pybids_inputs:
  dwi:
    filters:
      suffix: "dwi"
      extension: ".nii.gz"
      invalid_filters: "allow"
      datatype: "dwi"
    wildcards:
      - subject
      - acquisition
      - run
      - direction

  T1w:
    filters:
      suffix: "T1w"
      extension: ".nii.gz"
      datatype: "anat"
      #desc: "brain" # Require a skull-stripped brain
      #part: ["mag", false]
    wildcards:
      - subject
      #- run

# mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - 'all'  # if '', then the first rule is run

# Configure components:
# Each entry creates a new component that can be retreived within the workflow
# via `generate_inputs`.
# Filters are used to select paths: each filter has an `entity` key and a
# single value or list of values to select.
# Wildcards are used to mark variable parts of paths. Each wildcard is an
# entity, such as `subject` or `session`, that may vary across component paths.


# configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:
  --skip-bids-validation:
    help: |
      Skip validation of BIDS dataset. BIDS validation is performed by default
      using the bids-validator plugin (if installed/enabled) or with the pybids
      validator implementation (if bids-validator is not installed/enabled).
    dest: "plugins.validator.skip"
    action: "store_true"
    default: False
  --in_ivim_dir:
    help: 'Specify the path to the derivatives from ivim pipeline'
    default: False
    type: Path



# Docker and singularity containers may be defined here
singularity:
  #ants: 'docker://kaczmarj/ants:2.3.4'
  #itksnap: 'docker://khanlab/itksnap:latest'
  freesurfer: 'docker://freesurfer/freesurfer:7.4.1'
  #fsl: 'docker://fnndsc/fsl:6.0.4-cuda9.1'

root: 'results'
work: 'work'

synthseg_label_lookup: resources/synthseg_cortparc_labels.tsv

algo_names:
  - 'IAR_LU_biexp'
  - 'OGC_AmsterdamUMC_biexp_segmented'
  
execution:
  slurm:
    sbatch_exec: /usr/bin/sbatch
    sbatch_args: "-p general -n 8 -t 1:00:00"
